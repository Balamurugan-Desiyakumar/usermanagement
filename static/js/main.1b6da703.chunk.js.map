{"version":3,"sources":["home/Home.js","HttpInterceptor.js","user-list/UserList.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Home","class","to","className","Component","axios","interceptors","request","use","a","config","url","process","HttpInterceptor","users","handleShow","item","e","date","Date","dateList","calendarDate","dateFormat","activityDate","activity_periods","i","length","start_time","substring","trim","push","setState","show","userprofile","startDate","activeDate","dateCount","handleClose","handleChange","state","get","then","res","data","members","console","log","columns","label","field","sort","width","rows","this","action","alt","onClick","bind","slno","href","striped","bordered","hover","role","Modal","onHide","size","Header","closeButton","Title","real_name","Body","selected","onChange","tz","map","Footer","App","basename","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1b6da703.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport './home.scss';\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center align-items-center intro-section\">\r\n                        <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-body\">\r\n                                    <h3>Welcome to User management</h3>\r\n                                    <Link to=\"/user-list\">\r\n                                        <button className=\"btn btn-primary\">User List Screen</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import axios from 'axios';\r\n\r\n\r\naxios.interceptors.request.use(async (config) => {\r\n    config.url = process.env.REACT_APP_API_URL + config.url;\r\n    return config;\r\n})\r\n\r\nexport const HttpInterceptor = axios;\r\n","import React, { Component } from 'react';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport DatePicker from \"react-datepicker\";\r\nimport dateFormat from \"dateformat\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './userlist.scss';\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { HttpInterceptor } from \"../HttpInterceptor\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class users extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n            show: false,\r\n            userprofile: {},\r\n            startDate: new Date(),\r\n            activeDate: [],\r\n            dateCount: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        HttpInterceptor.get('user-lists').then(res => {\r\n            this.setState({ users: res.data.members })\r\n            console.log(this.state.users)\r\n        })\r\n\r\n    }\r\n\r\n    handleShow = (item, e) => {\r\n        let date = new Date();\r\n        let dateList = [];\r\n        let calendarDate = dateFormat(date, \"mmm d yyyy\");\r\n        let activityDate = item.activity_periods;\r\n        for (var i = 0; i < activityDate.length; i++) {\r\n            let checkDate = activityDate[i].start_time.substring(0, activityDate[i].start_time.length - 8).trim();\r\n            if (calendarDate === checkDate) {\r\n                dateList.push(activityDate[i])\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            show: true,\r\n            userprofile: item,\r\n            startDate: date,\r\n            activeDate: dateList,\r\n            dateCount: dateList.length\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({ show: false })\r\n    }\r\n\r\n    handleChange = date => {\r\n        let dateList = [];\r\n        let calendarDate = dateFormat(date, \"mmm d yyyy\");\r\n        let activityDate = this.state.userprofile.activity_periods;\r\n        for (var i = 0; i < activityDate.length; i++) {\r\n            let checkDate = activityDate[i].start_time.substring(0, activityDate[i].start_time.length - 8).trim();\r\n            if (calendarDate === checkDate) {\r\n                dateList.push(activityDate[i])\r\n            }\r\n        }\r\n        this.setState({\r\n            startDate: date,\r\n            activeDate: dateList,\r\n            dateCount: dateList.length\r\n        });\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Sl No',\r\n                    field: 'slno',\r\n                    sort: 'disabled',\r\n                    width: 150\r\n                },\r\n                {\r\n                    label: 'User Name',\r\n                    field: 'real_name',\r\n                    width: 270\r\n                },\r\n                {\r\n                    label: 'Time Zone',\r\n                    field: 'tz',\r\n                    width: 200\r\n                },\r\n                {\r\n                    label: 'Action',\r\n                    field: 'actions',\r\n                    sort: 'disabled',\r\n                    width: 100\r\n                },\r\n\r\n            ],\r\n            rows: []\r\n        };\r\n\r\n        data.rows = this.state.users;\r\n        for (let i = 0; i < this.state.users.length; i++) {\r\n            let action = <div className=\"action-icn\">\r\n                <i className=\"fas fa-eye\" alt=\"Edit\" onClick={this.handleShow.bind(this, data.rows[i])}></i>\r\n            </div>;\r\n            let slno = <span>{i + 1}</span>\r\n\r\n            data.rows[i]['actions'] = action;\r\n            data.rows[i]['slno'] = slno;\r\n\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-primary bg-primary\">\r\n                    <a className=\"navbar-brand\" href=\"#\">User management</a>\r\n                </nav>\r\n\r\n                <div className=\"container home-section\">\r\n                    {\r\n                        (this.state.users.length > 0) ?\r\n                            <MDBDataTable\r\n                                striped\r\n                                bordered\r\n                                hover\r\n                                data={data}\r\n                            />\r\n                            :\r\n                            <div class=\"spinner-border text-primary alg-center\" role=\"status\">\r\n                                <span class=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                    }\r\n\r\n\r\n\r\n                    <Modal show={this.state.show} onHide={this.handleClose} size=\"lg\" className=\"modal-userlist\">\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>{this.state.userprofile.real_name}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Pick Date</label>\r\n                                        <DatePicker className=\"form-control\"\r\n                                            selected={this.state.startDate}\r\n                                            onChange={this.handleChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name</label>\r\n                                        <span>{this.state.userprofile.real_name}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Time Zone</label>\r\n                                        <span>{this.state.userprofile.tz}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Total Activity Period Counts</label>\r\n                                        <span>{this.state.dateCount}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Activity Periods List</label>\r\n                                        <ul>\r\n                                            {\r\n                                                this.state.activeDate.map((activeDate, i) =>\r\n                                                    <li>\r\n                                                        {activeDate.start_time}\r\n                                                    </li>\r\n                                                )\r\n\r\n                                            }\r\n                                            {\r\n                                                (this.state.dateCount === 0) ?\r\n                                                    <li>No Activity Date</li> : ''\r\n                                            }\r\n\r\n                                        </ul>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <button className=\"btn btn-primary\" onClick={this.handleClose}>\r\n                                Close\r\n          </button>\r\n\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Home from \"./home/Home\";\r\nimport UserList from \"./user-list/UserList\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router basename=\"/usermanagement\">\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <Home />\r\n                </Route>\r\n                <Route path=\"/user-list\">\r\n                    <UserList />\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}","import React from 'react';\nimport Routes from \"./Routes\";\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}